# Support true color
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',*256col*:Tc'

unbind-key C-b
set -g prefix C-Space
bind-key C-Space send-prefix

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g mouse on
# setw -g mouse off
setw -g monitor-activity on

# Remap leader-f to fullscreen to mimic i3. Not that "find window" is then disabled in tmux
bind f resize-pane -Z

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind-key v split-window -h
bind-key s split-window -v

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 15
bind-key L resize-pane -R 15

bind-key M-j resize-pane -D 5
bind-key M-k resize-pane -U 5
bind-key M-h resize-pane -L 15
bind-key M-l resize-pane -R 15

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# # Use Ctrl-vim keys without prefix key to switch panes
# bind -n C-h run "($is_vim && tmux send-keys C-h) || \
#                           tmux select-pane -L"
#
# bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
#                          ($is_fzf && tmux send-keys C-j) || \
#                          tmux select-pane -D"
#
# bind -n C-k run "($is_vim && tmux send-keys C-k) || \
#                           ($is_fzf && tmux send-keys C-k)  || \
#                           tmux select-pane -U"
#
# bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
#                           tmux select-pane -R"
#
# # Use Ctrl-vim keys without prefix key to switch panes
# bind -n Left run "($is_vim && tmux send-keys Left) || \
#                           tmux select-pane -L"
#
# bind -n Down run "($is_vim && tmux send-keys Down)  || \
#                          ($is_fzf && tmux send-keys C-j) || \
#                          tmux select-pane -D"
#
# bind -n Up run "($is_vim && tmux send-keys Up) || \
#                           ($is_fzf && tmux send-keys C-k)  || \
#                           tmux select-pane -U"
#
# bind -n Right run  "($is_vim && tmux send-keys Right) || \
#                           tmux select-pane -R"

#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use Alt-vim keys to switch windows
bind -n M-h previous-window
bind -n M-l next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# THEME
set -g status-bg black
set -g status-fg white
#set -g window-status-current-bg white
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
# set -g status-left '#[fg=green](#S) #(whoami)'
# set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin "arcticicestudio/nord-tmux"
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'hoshiya4522/tmux-simple-nord'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

run '~/.tmux/plugins/tmux-resurrect/resurrect.tmux'
run '~/.tmux/plugins/tmux-continuum/continuum.tmux'
set -g @continuum-restore 'on'

# Capture pane contents for better session restoration
set -g @resurrect-capture-pane-contents 'on'
# Use session strategy for Vim
set -g @resurrect-strategy-vim 'session'

# Save Neovim session when tmux-resurrect saves tmux sessions
set -g @resurrect-save-hook 'run-shell "nvim --headless +\":mksession! ~/.config/nvim/session.vim\" +qa"'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
