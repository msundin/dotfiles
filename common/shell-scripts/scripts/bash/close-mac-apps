# #!/bin/bash
#
# # Function to close all running applications
# close_all_apps() {
#   # Get a list of running applications
#   apps=$(osascript -e 'tell application "System Events" to get the name of every process whose background only is false')
#
#   # Iterate through the list and close each application
#   for app in $apps; do
#     if [ "$app" != "Finder" ] && [ "$app" != "Dock" ]; then
#       echo "Closing $app..."
#       osascript -e "tell application \"$app\" to quit"
#       # Give each application a moment to close
#       sleep 2
#       # Force quit the application if it didn't close
#       osascript -e "tell application \"$app\" to quit without saving"
#     fi
#   done
# }
#
# close_all_apps

# #!/bin/bash
#
# # Function to close all running applications gracefully
# close_all_apps() {
#   # Get a list of running applications
#   apps=$(osascript -e 'tell application "System Events" to get the name of every process whose background only is false')
#
#   # Iterate through the list and close each application
#   for app in $apps; do
#     if [ "$app" != "Finder" ] && [ "$app" != "Dock" ] && [ "$app" != "Alacritty" ] && [ "$app" != "SystemUIServer" ]; then
#       echo "Closing $app..."
#       osascript -e "tell application \"$app\" to quit"
#       # Give each application a moment to close
#       sleep 2
#     fi
#   done
# }
#
# # Function to forcefully terminate any remaining applications
# force_quit_apps() {
#   apps=$(osascript -e 'tell application "System Events" to get the name of every process whose background only is false')
#
#   for app in $apps; do
#     if [ "$app" != "Finder" ] && [ "$app" != "Dock" ] && [ "$app" != "Alacritty" ] && [ "$app" != "SystemUIServer" ]; then
#       echo "Force quitting $app..."
#       pkill "$app"
#     fi
#   done
# }
#
# # Close all running applications gracefully
# close_all_apps
#
# # Force quit any remaining applications
# force_quit_apps
#
#!/bin/bash

# Function to close all running applications gracefully
close_all_apps() {
  # Get a list of running applications, convert to newline-separated format
  apps=$(osascript -e 'tell application "System Events" to get the name of every process whose background only is false' | tr ',' '\n')

  # Iterate through the list and close each application
  while IFS= read -r app; do
    app=$(echo "$app" | xargs)  # Remove leading/trailing spaces
    if [ "$app" != "Finder" ] && [ "$app" != "Dock" ] && [ "$app" != "SystemUIServer" ] && [ "$app" != "alacritty" ]; then
      echo "Closing $app..."
      osascript -e "tell application \"$app\" to quit"
      # Give each application a moment to close
      # sleep 2
    fi
    # osascript -e "tell application \"Android Studio\" to quit"
    osascript -e "tell application \"Microsoft Teams\" to quit"
  done <<< "$apps"
}

# Function to forcefully terminate any remaining applications
force_quit_apps() {
  apps=$(osascript -e 'tell application "System Events" to get the name of every process whose background only is false' | tr ',' '\n')

  while IFS= read -r app; do
    app=$(echo "$app" | xargs)  # Remove leading/trailing spaces
    if [ "$app" != "Finder" ] && [ "$app" != "Dock" ] && [ "$app" != "SystemUIServer" ] && [ "$app" != "alacritty" ]; then
      echo "Force quitting $app..."
      pkill "$app"
    fi
  done <<< "$apps"
}

# Close all running applications gracefully
close_all_apps

# Force quit any remaining applications
# force_quit_apps
